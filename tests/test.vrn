(import "tests/prelude.vrn")

(check (car (qcons a b)) (q a) "'car'/'qcons' test")
(check (qcar (cons a b)) (q cons) "'qcar'/'cons' test")
(check (car (cons #t #f)) #t "'car'/'cons' test")
(check (last car cdr cons) (q cons) "'last' test")
(check (seq car cdr cons) cons "'seq' test")
(check (bind/cc k (seq #t (k #f) car cdr)) #f "'bind/cc' test")
(check (@/rtl cons (q (a b))) (q (a . b)) "@ test")
(check (call/rtl qcons (q a) (q b)) (q ( a . b)) "call test")
(print (nil? ()))
(check (cond
	(#t "result"))
	"result"
	"cond test 1")
(check (cond
	(#f "hello")
	((nil? 5) "yo")
	(#t "result"))
	"result"
	"cond test 2")
