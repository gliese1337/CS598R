(def cons (wrap/rtl qcons))
(def car (wrap/rtl qcar))
(def cdr (wrap/rtl qcdr))
(def seq (wrap/rtl last))
(def print (wrap/rtl qprint))
(def qns (vau (e b) % (e b)))
(def ns (wrap/rtl qns))
(def cur-env (vau () % %))
(def new-env (vau () % (cur-env)))
(def read (wrap/rtl qread))
(def eq? (wrap/rtl qeq?))
(def qnil? (vau (a) % (eq? a)))
(def nil? (wrap/rtl qnil?))
(def & (wrap/rtl qand))
(def | (wrap/rtl qor))
(def qxor (vau (a b) % (a (b #f #t) (b #t #f))))
(def ^ (wrap/rtl qxor))
(def call/cc (vau (fn) % (bind/cc k (fn k))))
